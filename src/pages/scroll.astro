---
import Pagination from "$components/Pagination.svelte";
import MainLayout from "$layouts/main.astro";

const { pathname } = Astro.url;
---

<MainLayout title="Scroll Test" path={pathname}>
	<div class="container">
		<Pagination client:idle>
			<div slot="1">
				<p>
					Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsum magnam dolor est
					velit optio eaque perferendis, suscipit voluptatum sit accusamus eius illo
					cumque laboriosam. Non est quia totam ipsam dignissimos.
				</p>
				<p>
					Sint dolor anim eu nulla ea nulla culpa veniam amet occaecat magna. Consequat
					aliqua velit ad laborum nulla elit aliquip. Ullamco sit fugiat mollit anim
					incididunt quis aliquip proident. Sit minim proident adipisicing pariatur nisi
					dolore amet qui aliquip deserunt veniam aute qui. Excepteur aute tempor ad.
				</p>
				<p>
					Dolore culpa laboris ad culpa amet. Proident duis adipisicing incididunt et
					occaecat laboris cillum eiusmod sit ex. Ut nisi deserunt velit non aliqua
					exercitation commodo do voluptate consectetur eu aliqua quis labore consequat.
					Ea dolore proident ex adipisicing occaecat veniam minim. Officia culpa fugiat
					consectetur adipisicing ex dolor consequat commodo ut cillum qui minim mollit.
					Tempor exercitation ex dolore id proident quis exercitation mollit. Non anim
					minim cillum esse sint nulla eu voluptate amet esse adipisicing tempor minim
					anim. Officia dolor ut non eu consectetur.
				</p>
			</div>
			<div slot="2">
				<p>
					Occaecat excepteur sit ex minim. Do pariatur ad officia aute dolore quis laboris
					sit. Fugiat dolor do elit et. Excepteur irure elit mollit nostrud. Culpa
					pariatur id non. Nulla incididunt aliqua adipisicing nulla officia. Culpa
					reprehenderit incididunt aliqua commodo qui fugiat tempor consequat elit.
				</p>
				<p>
					Eu in magna dolore pariatur voluptate dolor. Elit Lorem qui mollit cupidatat
					culpa magna Lorem tempor ut Lorem ex dolor. Eiusmod reprehenderit nostrud culpa.
					Fugiat minim occaecat elit magna mollit Lorem laborum dolor consectetur magna
					dolor amet non ea excepteur. Ad cupidatat elit sint id sint velit ut sint culpa
					nostrud nulla non. Commodo exercitation pariatur non. Elit aliquip reprehenderit
					anim exercitation cillum exercitation est dolor aliquip anim. Reprehenderit
					tempor excepteur et.
				</p>
				<p>
					Aliquip officia ipsum non aute incididunt veniam. In proident tempor quis nisi
					culpa ipsum cillum non pariatur aliquip sit. Duis sit nulla dolore anim do id
					ullamco non amet nostrud do deserunt in exercitation anim. Adipisicing do mollit
					qui. Enim laborum Lorem ex veniam elit esse consequat amet aute duis culpa nisi
					aliquip eu. Commodo dolore anim aliqua et ut culpa culpa et. Amet aliqua est qui
					mollit. Sit pariatur ea exercitation officia deserunt ullamco aliquip pariatur
					minim cillum.
				</p>
				<p>
					Laborum aute dolore dolor excepteur commodo minim commodo consectetur velit ea
					quis exercitation elit ut. Commodo deserunt in quis commodo. Officia consectetur
					irure deserunt qui occaecat labore adipisicing sit. Occaecat aliquip
					reprehenderit nisi ipsum nulla laboris laboris nisi tempor non enim cillum ea.
				</p>
			</div>
		</Pagination>
	</div>
</MainLayout>

<style lang="postcss">
    body,
    html {
        /* don't make this min-height otherwise the #scroll-area won't get the scrollbar */
        height: 100%;
        /* this disables browser's native pull to refresh or any other browser animations on scroll */
        overscroll-behavior-y: none;
    }

    /* create a container to layout our nav and scroll area */
    .container {
         /* display: grid; */
        grid-template-columns: 1fr;

        /* the navbar is auto sized and the scroll area takes the remaining height */
        grid-template-rows: auto 1fr;

        /* needed to make the scroll area have the scrollbar */
         /* height: 100%; */

        :global(.main) {
            display: flex;
            flex-direction: column;
            align-items: stretch;

            > :global(.text) {
                display: flex;
                gap: var(--size-3);
                 /* padding: var(--size-3); */
                flex-direction: column;
                align-items: stretch;
                min-height: 100vh;
            }
        }

        /* functional styles needed to make this work */
        :global(#scroll-area) {
            /* the #scroll-area must have position relative so we can position the #pull-to-refresh element relative to this */
            position: relative;

            /* attach scrollbar on overflow */
            overflow-y: auto;
        }

        :global(.pull-to-refresh) {
            /* we define some css custom properties that we will later use to style the pull-to-refresh spinner */

            /* these are the custom properties we will manipulate with js later on --offset is the amount the icon is dragged and --angle is it's rotation */
            --y: calc(var(--offset, 0px) + var(--initial));

            /* take the spinner out of document flow and place it relative to scroll area */
             /* position: absolute; */
             /* inset: auto 0; */

            /* center the containing icon */
            display: grid;
            place-content: center;

            overflow: hidden;

            :global(.ptr-icon) {
                background-color: var(--text-1);
                width: calc(var(--percentage) * 1vw);
                height: 5px;
            }
        }
    }
</style>
