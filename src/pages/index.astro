---
import { trpc } from "lib/trpc/client";
import RoundCard from "../components/RoundCard.astro";
import MainLayout from "../layouts/main.astro";
import IndexNav from "src/components/IndexNav.astro";
import { Icon } from "astro-icon/components";

const url = Astro.request.url;
const params = new URL(url).searchParams;

const weekOffset = Number(params.get("offset"));
const weekends = await trpc.rounds.getWeekend.query({ weekOffset });

const now = Date.now();
---

<MainLayout title="Homepage">
    <IndexNav />

    <a href={`?offset=${weekOffset - 1}`} class="btn btn-surface">
        <Icon name="lucide:chevron-up" />
        <span>Previous</span>
    </a>
    <section>
        <h1 id="this-weekend">
            {
                new Intl.RelativeTimeFormat("en-GB", {
                    numeric: "auto",
                }).format(weekOffset, "week")
            }
        </h1>
        <ul class="round-list" role="list">
            {
                weekends?.length ? (
                    weekends.map((round) => (
                        <li
                            id={`round-${round.id}`}
                            transition:name={`round-${round.id}`}
                            style={`--color-hue: var(--${round.series}-hue)`}
                            class={
                                round.endDate && round.endDate.valueOf() < now
                                    ? "past"
                                    : ""
                            }
                        >
                            <RoundCard
                                link={`/round/${round.id}`}
                                {round}
                                showNextSession
                            />

                            <div class="stack-wrapper" aria-hidden="true">
                                {[...Array(round._count.sessions)].map(
                                    (_n, i) => (
                                        <div
                                            data-index={i}
                                            transition:name={`sessions-${i}-${round.id}`}
                                        />
                                    )
                                )}
                            </div>
                        </li>
                    ))
                ) : (
                    <div>Nothing here!</div>
                )
            }
        </ul>
    </section>
    <a href={`?offset=${weekOffset + 1}`} class="btn btn-surface">
        <Icon name="lucide:chevron-down" />
        <span>Next</span>
    </a>
</MainLayout>

<style lang="scss">
    h1 {
        text-transform: capitalize;
    }

    .round-list {
        display: flex;
        flex-direction: column;
        gap: var(--size-7);

        padding: 0;
        list-style: none;

        > li {
            padding: 0;
            max-inline-size: unset;
            position: relative;
        }
        :global(.past) {
            opacity: 0.5;
        }
    }

    .stack-wrapper {
        display: grid;
        grid-template-rows: 1fr;
        grid-template-columns: 1fr;
        position: absolute;
        flex-grow: 1;
        inset-inline: 0.5rem;
        inset-block: 1.25rem -1.25rem;
        z-index: -1;
        isolation: isolate;

        div {
            grid-area: 1/1;
            border-radius: var(--radius-4);

            &:nth-child(1) {
                margin-block-end: 0.5rem;
                background: var(--color-4);
                border: var(--color-2) var(--border-size-2) solid;
                z-index: 1;
            }
            &:not(:nth-child(1)) {
                margin-inline: 0.75rem;
                background: var(--color-3);
                border: var(--color-1) var(--border-size-2) solid;
            }
        }
    }
</style>
