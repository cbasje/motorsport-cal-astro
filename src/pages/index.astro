---
import RoundCard from "$components/RoundCard.astro";
import MainLayout from "$layouts/main.astro";
import IndexNav from "$components/IndexNav.astro";
import { Icon } from "astro-icon/components";
import * as rounds from "$db/round-repository";

const { pathname, searchParams } = Astro.url;

const [startOffset, endOffset] = searchParams.get("offset")?.split(",").map(Number) ?? [
	0,
	undefined,
];
const weekends = await rounds.getWeekends({ startOffset, endOffset });

const now = Date.now();
---

<MainLayout title="Homepage" path={pathname}>
	<IndexNav />

	<a href={`?offset=${(startOffset ?? 0) - 1},${endOffset ?? 0}`} class="btn btn-surface">
		<Icon name="filled/angle-up" />
		<span>Previous</span>
	</a>
	<section>
		<!-- <h1 id="this-weekend">
			{
				new Intl.RelativeTimeFormat("en-GB", {
					numeric: "auto",
				}).format(startOffset ?? 0, "week")
			}
		</h1> -->
		<ul class="round-list" role="list">
			{
				Object.keys(weekends)?.length > 0 ? (
					Object.keys(weekends).map((weekend) => (
						<li class="weekend">
							<h2>
								{new Intl.RelativeTimeFormat("en-GB", {
									numeric: "auto",
								}).format(Number(weekend), "week")}
							</h2>

							{weekends[weekend].length > 0 &&
								weekends[weekend].map((round) => (
									<div
										id={`round-${round.id}`}
										class={
											"round-item" +
											(round.end?.valueOf() < now ? "past" : "")
										}
										transition:name={`round-${round.id}`}
										style={`--color-hue: var(--${round.series}-hue)`}
									>
										<RoundCard
											round={round}
											link={`/round/${round.id}`}
											showNextSession
										/>

										<div class="stack-wrapper" aria-hidden="true">
											{[...Array(round.sessionCount)].map((_n, i) => (
												<div
													data-index={i}
													transition:name={`sessions-${i}-${round.id}`}
												/>
											))}
										</div>
									</div>
								))}
						</li>
					))
				) : (
					<div>Nothing here!</div>
				)
			}
		</ul>
	</section>
	<a href={`?offset=${startOffset ?? 0},${(endOffset ?? 0) + 1}`} class="btn btn-surface">
		<Icon name="filled/angle-down" />
		<span>Next</span>
	</a>
</MainLayout>

<style lang="postcss">
    h1, h2 {
        text-transform: capitalize;
    }

    .round-list {
        display: flex;
        flex-direction: column;
        gap: var(--size-7);

        padding: 0;
        list-style: none;

        > li {
            padding: 0;
            max-inline-size: unset;
        }
		.round-item {
            position: relative;
		}
        :global(.past) {
            opacity: 0.5;
        }
    }

    .stack-wrapper {
        display: grid;
        grid-template-rows: 1fr;
        grid-template-columns: 1fr;
        position: absolute;
        flex-grow: 1;
        inset-inline: 0.5rem;
        inset-block: 1.25rem -1.25rem;
        z-index: -1;
        isolation: isolate;

        div {
            grid-area: 1/1;
            border-radius: var(--radius-4);

            &:nth-child(1) {
                margin-block-end: 0.5rem;
                background: var(--color-4);
                border: var(--color-2) var(--border-size-2) solid;
                z-index: 1;
            }
            &:not(:nth-child(1)) {
                margin-inline: 0.75rem;
                background: var(--color-3);
                border: var(--color-1) var(--border-size-2) solid;
            }
        }
    }
</style>
