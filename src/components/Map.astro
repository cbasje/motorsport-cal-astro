---
import "leaflet/dist/leaflet.css";
import type { trpc } from "../../lib/trpc/client";

// type Marker = { lat?: number; lon?: number };
type Marker = Awaited<
    ReturnType<typeof trpc.circuits.getMapMarkers.query>
>[number];
interface Props {
    markers: Marker[];
}
const { markers } = Astro.props;

const latitude = 51.505;
const longitude = -0.09;
const zoom = 3;
const tileLayer = "https://tile.openstreetmap.org/{z}/{x}/{y}.png";
const attribution =
    "Â© <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors";
const container = "map";
const containerstyle = "height: 61.8vh";
---

<leaflet-map
    data-latitude={latitude}
    data-longitude={longitude}
    data-zoom={zoom}
    data-container={container}
    data-tiles={tileLayer}
    data-attribution={attribution}
    data-containerstyle={containerstyle}
    data-markers={JSON.stringify(markers)}
>
    <div id={container} style={containerstyle}></div>
    <script>
        import L from "leaflet";

        class LeafletMap extends HTMLElement {
            constructor() {
                super();

                const latlng: [number, number] = [
                    Number(this.dataset.latitude),
                    Number(this.dataset.longitude),
                ];

                const map = L.map(this.dataset.container).setView(
                    latlng,
                    Number(this.dataset.zoom)
                );
                L.tileLayer(this.dataset.tiles, {
                    attribution: this.dataset.attribution,
                }).addTo(map);

                JSON.parse(this.dataset.markers).forEach((m) => {
                    const myIcon = L.icon({
                        iconUrl: `icons/${m.rounds
                            .map((r) => r.series)
                            .join("-")}.svg`,
                        iconSize: [32, 32],
                        iconAnchor: [16, 30],
                        popupAnchor: [0, -30],
                    });

                    L.marker(m, { icon: myIcon })
                        .addTo(map)
                        .bindPopup(
                            m.title +
                                "<br>" +
                                m.rounds.map((r) => r.series).join()
                        )
                        .openPopup();
                });
            }
        }

        customElements.define("leaflet-map", LeafletMap);
    </script>
</leaflet-map>
