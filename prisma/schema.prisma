generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "zod-prisma"
  output   = "../lib/types/prisma"

  modelSuffix = "Z"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Circuit {
  id              String   @id @default(uuid())
  created_at      DateTime @default(now()) @db.Timestamptz(6)
  title           String   @unique
  wikipediaPageId Int?
  lon             Float?
  lat             Float?
  rounds          Round[]
}

model Round {
  id         String    @id @default(uuid())
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  number     Int       @default(0)
  title      String
  season     String
  link       String?
  circuitId  String
  series     SeriesId
  circuit    Circuit   @relation(fields: [circuitId], references: [id])
  sessions   Session[]

  @@unique([title, number, series, season], name: "uniqueRoundPerSeriesSeason")
}

model Session {
  id         String      @id @default(uuid())
  created_at DateTime    @default(now()) @db.Timestamptz(6)
  number     Int         @default(0)
  startDate  DateTime
  endDate    DateTime
  roundId    String
  type       SessionType
  round      Round       @relation(fields: [roundId], references: [id])

  @@unique([type, number, roundId], name: "uniqueSessionPerRoundId")
}

enum SeriesId {
  F1
  F2
  F3
  FE
  INDY
  W
  WEC
  F1A
}

enum SessionType {
  PRACTICE
  QUALIFYING
  RACE
  SHAKEDOWN
  SPRINT
}
